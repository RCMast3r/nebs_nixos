# Auto-generated using compose2nix v0.3.1.
{ config, pkgs, lib, ... }:

{

  # Containers
  virtualisation.oci-containers.containers."wg-easy" = {
    image = "weejewel/wg-easy";
    environment = {
      "WG_DEFAULT_ADDRESS" = "10.8.0.x";
      "WG_DEFAULT_DNS" = "192.168.86.148";
      "WG_PORT" = "51820";
    };
    # "WG_HOST" = "changeme";
    # "PASSWORD" = "deleteme";
    environmentFiles = [ config.age.secrets.wg-easy-env.path ];
    volumes = [
      "/mnt/data/wireguard:/etc/wireguard:rw"
    ];
    ports = [
      "51820:51820/udp"
      "51821:51821/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--cap-add=NET_ADMIN"
      "--cap-add=SYS_MODULE"
      "--network-alias=wg-easy"
      "--network=wireguard_default"
      "--sysctl=net.ipv4.conf.all.src_valid_mark=1"
      "--sysctl=net.ipv4.ip_forward=1"
    ];
  };
  systemd.services."docker-wg-easy" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    after = [
      "docker-network-wireguard_default.service"
    ];
    requires = [
      "docker-network-wireguard_default.service"
    ];
    partOf = [
      "docker-compose-wireguard-root.target"
    ];
    wantedBy = [
      "docker-compose-wireguard-root.target"
    ];
  };

  # Networks
  systemd.services."docker-network-wireguard_default" = {
    path = [ pkgs.docker ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "docker network rm -f wireguard_default";
    };
    script = ''
      docker network inspect wireguard_default || docker network create wireguard_default
    '';
    partOf = [ "docker-compose-wireguard-root.target" ];
    wantedBy = [ "docker-compose-wireguard-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-wireguard-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
